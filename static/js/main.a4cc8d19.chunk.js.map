{"version":3,"sources":["images/bgImage.jpg","Components/Container/Container.styled.jsx","Components/Title/Title.styled.jsx","Components/Title/Title.jsx","Components/ContactForm/ContactForm.styled.jsx","Components/ContactForm/ContactForm.jsx","Components/Filter/Filter.styled.jsx","Components/Filter/Filter.jsx","Components/ContactList/ContactListItem/ContactListItem.styled.jsx","Components/ContactList/ContactListItem/ContactListItem.jsx","Components/ContactList/ContactList.jsx","Components/App/App.jsx","index.js"],"names":["Container","styled","div","bgImage","Title","h2","PageTitle","title","Form","form","INITIAL_STATE","name","number","ContactForm","state","handleChangeForm","target","value","setState","handleFormSubmit","event","preventDefault","onAdd","props","validateForm","id","uuid","resetForm","onCheckUnique","this","onSubmit","type","onChange","placeholder","pattern","required","Component","FilterName","Filter","filter","Item","li","ContactListItem","onRemove","onClick","ContactsList","contacts","length","map","contact","App","handleAddContact","newContact","handleCheckUniqueContact","isExistContact","find","alert","handleRemoveContact","handleFilterChange","getVisibleContacts","toLowerCase","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","prevState","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a4cc8d19.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bgImage.47fc049c.jpg\";","import styled from '@emotion/styled';\n\nimport bgImage from 'images/bgImage.jpg';\n\nexport const Container = styled.div`\n  height: 100vh;\n  max-width: 100vw;\n  margin-right: auto;\n  margin-left: auto;\n  padding: 40px;\n  background-image: url(' ${bgImage} ');\n  background-size: 100%;\n  background-position: center;\n  background-repeat: no-repeat;\n`;\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h2`\n  margin-bottom: 20px;\n  padding: 10px;\n`;\n","import PropTypes from 'prop-types';\n\nimport { Title } from './Title.styled';\n\nexport const PageTitle = ({ title }) => {\n  return <Title>{title}</Title>;\n};\n\nPageTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  margin-bottom: 20px;\n  padding: 10px;\n\n  label {\n    display: block;\n    margin-bottom: 10px;\n    padding-top: 10px;\n    padding-bottom: 10px;\n  }\n\n  input {\n    display: block;\n    margin-top: 10px;\n  }\n\n  button {\n    display: block;\n    width: 100px;\n    padding: 2px;\n    margin-right: 20px;\n    border-radius: 6px;\n    cursor: pointer;\n  }\n`;\n","// import PropTypes from 'prop-types';\nimport { Component } from 'react';\nimport { v4 as uuid } from 'uuid';\n\nimport { Form } from './ContactForm.styled';\n\nconst INITIAL_STATE = {\n  name: '',\n  number: '',\n};\n\nexport class ContactForm extends Component {\n  state = INITIAL_STATE;\n\n  handleChangeForm = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n\n    const { name, number } = this.state;\n    const { onAdd } = this.props;\n\n    const isValidatedForm = this.validateForm();\n    if (!isValidatedForm) return;\n    onAdd({ id: uuid(), name, number });\n    this.resetForm();\n  };\n\n  validateForm = () => {\n    const { name } = this.state;\n    const { onCheckUnique } = this.props;\n\n    return onCheckUnique(name);\n  };\n\n  resetForm = () => this.setState(INITIAL_STATE);\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <Form onSubmit={this.handleFormSubmit}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleChangeForm}\n            placeholder=\"Enter contact's name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"The name can only consist of letters, apostrophe, dashes and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan etc.\"\n            required\n          />\n        </label>\n        <label>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={this.handleChangeForm}\n            placeholder=\"Enter contact's phone number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </Form>\n    );\n  }\n}\n\n// ContactForm.propTypes = {};\n","import styled from '@emotion/styled';\n\nexport const FilterName = styled.div`\n  margin-bottom: 20px;\n  padding: 10px;\n\n  input {\n    margin-right: 20px;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { FilterName } from './Filter.styled';\n\nexport const Filter = ({ filter, onChange }) => {\n  return (\n    <FilterName>\n      <label>\n        <input\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={({ target }) => onChange(target.value)}\n          placeholder=\"Enter name for Search\"\n        />\n        Find contact by name\n      </label>\n    </FilterName>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  padding: 10px;\n\n  button {\n    width: 100px;\n    padding: 2px;\n    margin-right: 20px;\n    border-radius: 6px;\n    cursor: pointer;\n\n    &:hover {\n      border-color: red;\n    }\n  }\n\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { Item } from './ContactListItem.styled';\n\nexport const ContactListItem = ({ id, name, number, onRemove }) => {\n  return (\n    <Item>\n      <button onClick={() => onRemove(id)}>delete</button>\n      {name}: {number}\n    </Item>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onRemove: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nimport { ContactListItem } from './ContactListItem';\n\nexport const ContactsList = ({ contacts, onRemove }) => {\n  if (contacts.length === 0) return null;\n  return (\n    <ul>\n      {contacts.map(contact => (\n        <ContactListItem key={contact.id} {...contact} onRemove={onRemove} />\n      ))}\n    </ul>\n  );\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onRemove: PropTypes.func.isRequired,\n};\n","import { Component } from 'react';\n\nimport { PageTitle } from 'Components/Title';\nimport { ContactForm } from 'Components/ContactForm';\nimport { Filter } from 'Components/Filter';\nimport { ContactsList } from 'Components/ContactList';\n\nexport class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  handleAddContact = newContact =>\n    this.setState(({ contacts }) => ({\n      contacts: [...contacts, newContact],\n    }));\n\n  handleCheckUniqueContact = name => {\n    const { contacts } = this.state;\n\n    const isExistContact = !!contacts.find(contact => contact.name === name);\n\n    isExistContact && alert('Contact is already exist');\n\n    return !isExistContact;\n  };\n\n  handleRemoveContact = id =>\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== id),\n    }));\n\n  handleFilterChange = filter => this.setState({ filter });\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <>\n        <PageTitle title=\"Phonebook\" />\n        <ContactForm\n          onAdd={this.handleAddContact}\n          onCheckUnique={this.handleCheckUniqueContact}\n        />\n        <PageTitle title=\"Contacts List\" />\n        <Filter filter={filter} onChange={this.handleFilterChange} />\n        <ContactsList\n          contacts={visibleContacts}\n          onRemove={this.handleRemoveContact}\n        />\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nimport { Container } from 'Components/Container';\nimport { App } from './Components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Container>\n      <App />\n    </Container>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}