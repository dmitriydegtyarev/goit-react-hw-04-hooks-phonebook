{"version":3,"sources":["images/bgImage.jpg","Components/Container/Container.styled.jsx","Components/Title/Title.styled.jsx","Components/Title/Title.jsx","Components/ContactForm/ContactForm.styled.jsx","Components/ContactForm/ContactForm.jsx","Components/Filter/Filter.styled.jsx","Components/Filter/Filter.jsx","Components/ContactList/ContactListItem/ContactListItem.styled.jsx","Components/ContactList/ContactListItem/ContactListItem.jsx","Components/ContactList/ContactList.jsx","Components/App/App.jsx","index.js"],"names":["Container","styled","div","bgImage","Title","h2","PageTitle","title","Form","form","ContactForm","onAdd","onCheckUnique","useState","name","setName","number","setNumber","handleChangeForm","target","value","validateForm","resetForm","onSubmit","event","preventDefault","id","uuid","type","onChange","placeholder","pattern","required","FilterName","Filter","filter","Item","li","ContactListItem","onRemove","onClick","ContactsList","contacts","length","map","contact","App","JSON","parse","window","localStorage","getItem","setContacts","setFilter","useEffect","setItem","stringify","newContact","isExistContact","find","toast","error","toLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb2bafa2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bgImage.c18d167e.jpg\";","import styled from '@emotion/styled';\n\nimport bgImage from 'images/bgImage.jpg';\n\nexport const Container = styled.div`\n  height: 100vh;\n  margin-right: auto;\n  margin-left: auto;\n  padding: 40px;\n  background-image: url(' ${bgImage} ');\n`;\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h2`\n  margin-bottom: 20px;\n  padding: 10px;\n`;\n","import PropTypes from 'prop-types';\n\nimport { Title } from './Title.styled';\n\nexport const PageTitle = ({ title }) => {\n  return <Title>{title}</Title>;\n};\n\nPageTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  margin-bottom: 20px;\n  padding: 10px;\n\n  label {\n    display: block;\n    margin-bottom: 10px;\n    padding-top: 10px;\n    padding-bottom: 10px;\n  }\n\n  input {\n    display: block;\n    margin-top: 10px;\n  }\n\n  button {\n    display: block;\n    width: 100px;\n    padding: 2px;\n    margin-right: 20px;\n    border-radius: 6px;\n    cursor: pointer;\n  }\n`;\n","import { useState } from 'react';\nimport { v4 as uuid } from 'uuid';\n\nimport { Form } from './ContactForm.styled';\n\nexport const ContactForm = ({ onAdd, onCheckUnique }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChangeForm = ({ target }) => {\n    const { name, value } = target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n\n    const isValidatedForm = validateForm();\n    if (!isValidatedForm) return;\n    onAdd({ id: uuid(), name, number });\n    resetForm();\n  };\n\n  const validateForm = () => {\n    return onCheckUnique(name);\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleFormSubmit}>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChangeForm}\n          placeholder=\"Enter contact's name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"The name can only consist of letters, apostrophe, dashes and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan etc.\"\n          required\n        />\n      </label>\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChangeForm}\n          placeholder=\"Enter contact's phone number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </Form>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const FilterName = styled.div`\n  margin-bottom: 20px;\n  padding: 10px;\n\n  input {\n    margin-right: 20px;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { FilterName } from './Filter.styled';\n\nexport const Filter = ({ filter, onChange }) => {\n  return (\n    <FilterName>\n      <label>\n        <input\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={({ target }) => onChange(target.value)}\n          placeholder=\"Enter name for Search\"\n        />\n        Find contact by name\n      </label>\n    </FilterName>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  padding: 10px;\n\n  button {\n    width: 100px;\n    padding: 2px;\n    margin-right: 20px;\n    border-radius: 6px;\n    cursor: pointer;\n\n    &:hover {\n      border-color: red;\n    }\n  }\n\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { Item } from './ContactListItem.styled';\n\nexport const ContactListItem = ({ id, name, number, onRemove }) => {\n  return (\n    <Item>\n      <button onClick={() => onRemove(id)}>delete</button>\n      {name}: {number}\n    </Item>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onRemove: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nimport { ContactListItem } from './ContactListItem';\n\nexport const ContactsList = ({ contacts, onRemove }) => {\n  if (contacts.length === 0) return null;\n  return (\n    <ul>\n      {contacts.map(contact => (\n        <ContactListItem key={contact.id} {...contact} onRemove={onRemove} />\n      ))}\n    </ul>\n  );\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onRemove: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport toast, { Toaster } from 'react-hot-toast';\n\nimport { PageTitle } from 'Components/Title';\nimport { ContactForm } from 'Components/ContactForm';\nimport { Filter } from 'Components/Filter';\nimport { ContactsList } from 'Components/ContactList';\n\nexport const App = () => {\n  const [contacts, setContacts] = useState(() =>\n    JSON.parse(window.localStorage.getItem('contacts' ?? [])),\n  );\n  const [filter, setFilter] = useState('');\n\n  const handleAddContact = newContact => setContacts([...contacts, newContact]);\n\n  const handleCheckUniqueContact = name => {\n    const isExistContact = !!contacts.find(contact => contact.name === name);\n\n    isExistContact && toast.error('Contact is already exist');\n\n    return !isExistContact;\n  };\n\n  const handleRemoveContact = id =>\n    setContacts(contacts.filter(contact => contact.id !== id));\n\n  const handleFilterChange = filter => setFilter(filter);\n\n  const getVisibleContacts = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  });\n\n  return (\n    <>\n      <PageTitle title=\"Phonebook\" />\n      <ContactForm\n        onAdd={handleAddContact}\n        onCheckUnique={handleCheckUniqueContact}\n      />\n      <PageTitle title=\"Contacts List\" />\n      <Filter filter={filter} onChange={handleFilterChange} />\n      <ContactsList\n        contacts={getVisibleContacts()}\n        onRemove={handleRemoveContact}\n      />\n      <Toaster />\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nimport { Container } from 'Components/Container';\nimport { App } from './Components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Container>\n      <App />\n    </Container>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}